#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –º–µ–Ω—é –¥–ª—è python3-light
–°–æ–≤–º–µ—Å—Ç–∏–º —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ Python –≤ OpenWrt
"""

import http.server
import socketserver
import os
import sys
import signal
import time

# –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑ argparse
HOST = "0.0.0.0"
PORT = 8080

class SimpleMenuHandler(http.server.SimpleHTTPRequestHandler):
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–Ω—é"""
    
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=os.path.dirname(os.path.abspath(__file__)), **kwargs)
    
    def do_GET(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤"""
        if self.path == '/' or self.path == '/index.html' or self.path == '':
            self.path = '/index.html'
        
        # –ü—Ä–æ—Å—Ç–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        if self.path.endswith(('.css', '.js', '.png', '.jpg', '.ico')):
            self.send_response(200)
            self.send_header('Cache-Control', 'max-age=3600')
            if self.path.endswith('.css'):
                self.send_header('Content-Type', 'text/css')
            elif self.path.endswith('.js'):
                self.send_header('Content-Type', 'application/javascript')
            self.end_headers()
            
            try:
                with open(self.path[1:], 'rb') as f:
                    self.wfile.write(f.read())
            except FileNotFoundError:
                self.send_error(404)
            return
        
        super().do_GET()
    
    def log_message(self, format, *args):
        """–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        timestamp = time.strftime('%H:%M:%S')
        print(f"[{timestamp}] {format % args}")

class ThreadedServer(socketserver.ThreadingMixIn, socketserver.TCPServer):
    """–ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"""
    allow_reuse_address = True
    daemon_threads = True

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
    sys.exit(0)

def get_local_ip():
    """–ü—Ä–æ—Å—Ç–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ IP"""
    import socket
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        ip = s.getsockname()[0]
        s.close()
        return ip
    except:
        return "127.0.0.1"

def parse_args():
    """–ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ argparse"""
    global HOST, PORT
    
    i = 1
    while i < len(sys.argv):
        arg = sys.argv[i]
        if arg in ['-p', '--port']:
            if i + 1 < len(sys.argv):
                try:
                    PORT = int(sys.argv[i + 1])
                    i += 1
                except ValueError:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç!")
                    sys.exit(1)
        elif arg in ['-H', '--host']:
            if i + 1 < len(sys.argv):
                HOST = sys.argv[i + 1]
                i += 1
        elif arg in ['-h', '--help']:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 server-lite.py [-p PORT] [-H HOST]")
            print("  -p, --port    –ü–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8080)")
            print("  -H, --host    IP –∞–¥—Ä–µ—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0.0.0)")
            sys.exit(0)
        i += 1

def main():
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists('index.html'):
        print("‚ùå –§–∞–π–ª index.html –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏–∑ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏")
        sys.exit(1)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        with ThreadedServer((HOST, PORT), SimpleMenuHandler) as httpd:
            local_ip = get_local_ip()
            
            print("üçΩÔ∏è  –°–µ—Ä–≤–µ—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –º–µ–Ω—é –∑–∞–ø—É—â–µ–Ω!")
            print(f"üìç –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: http://{local_ip}:{PORT}")
            print(f"üåê –°–µ—Ç–µ–≤–æ–π –∞–¥—Ä–µ—Å: http://{HOST}:{PORT}")
            print("‚ö° Lite –≤–µ—Ä—Å–∏—è –¥–ª—è OpenWrt")
            print("üîÑ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            print("-" * 40)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            httpd.serve_forever()
            
    except OSError as e:
        if e.errno == 98:
            print(f"‚ùå –ü–æ—Ä—Ç {PORT} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
            print(f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: python3 server-lite.py -p {PORT + 1}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 